name: C/C++ CI

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name : Build Application 
    runs-on: ubuntu-latest

    steps:
    - name: install mpi
      run: sudo apt-get update && sudo apt-get install -y mpich
      
    - name: checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: make    
      run: mkdir -p build && cd build && cmake .. && cmake --build .

    - name: test
      run: cd build && mpirun -np 2 ./test_multiplication  

    - name: install dependencies for Singularity 
      run: |
        sudo apt-get install -y \
          uuid-dev \
          build-essential \
          libseccomp-dev \
          pkg-config \
          squashfs-tools \
          cryptsetup \
          curl wget git

    - name: install 'expect' 
      run: |
        sudo apt install expect

    - name: install Go
      run: |
        export GOVERSION=1.17.3 OS=linux ARCH=amd64
        wget -O /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz \
          https://dl.google.com/go/go${GOVERSION}.${OS}-${ARCH}.tar.gz
        sudo tar -C /usr/local -xzf /tmp/go${GOVERSION}.${OS}-${ARCH}.tar.gz

    - name : setupe Env for GO
      run: echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc && source ~/.bashrc
      
    - name: Install Singularity
      run: |
        export VERSION=3.8.7 && # adjust this as necessary \
        wget https://github.com/hpcng/singularity/releases/download/v${VERSION}/singularity-${VERSION}.tar.gz \
        && sudo tar -xzf singularity-${VERSION}.tar.gz \
        && cd singularity-${VERSION} \
        && sudo ./mconfig \
        && sudo make -C builddir \
        && sudo make -C builddir install
 
    - name : verifyVersion
      run: singularity --version

    - name: Build Singularity container
      run: |
        sudo singularity build container.sif Singularity.def
      
    - name: Group files to Send
      run : mkdir to_send && mv job.sh to_send/ && mv container.sif to_send/

    - name: SSH to remote server
      env:
        SSHPASS: ${{ secrets.SSHGALILEO }}
      run: |
        mkdir ~/.ssh
        chmod 700 ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keyscan -t rsa login.g100.cineca.it >> ~/.ssh/known_hosts
        sshpass -e scp -r to_send a08trb58@login.g100.cineca.it:~/
        ssh-keygen -f "/home/runner/.ssh/known_hosts" -R "login.g100.cineca.it"
        sshpass -e ssh -o StrictHostKeyChecking=no -tt a08trb58@login.g100.cineca.it << 'EOF'
        rm -rf santarsiero_ferrario_sweng_part2
        git clone https://github.com/dome01polimi/santarsiero_ferrario_sweng_part2
        chmod +x to_send/job.sh 
        sbatch to_send/job.sh
        squeue --me
        exit      
        EOF
